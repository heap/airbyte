---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-metrics-reporter
  labels:
    {{- include "airbyte.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      airbyte: metrics-reporter
  template:
    metadata:
      labels:
        airbyte: metrics-reporter
      {{- if .Values.metricsReporter.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.metricsReporter.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "airbyte.serviceAccountName" . }}
      {{- if .Values.metricsReporter.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.metricsReporter.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsReporter.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.metricsReporter.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metricsReporter.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.metricsReporter.affinity "context" $) | nindent 8 }}
      {{- end }}
      containers:
      - name: airbyte-metrics-reporter-container
        image: {{ include "airbyte.metricsReporterImage" . }}
        imagePullPolicy: "{{ .Values.metricsReporter.image.pullPolicy }}"
        env:
        - name: AIRBYTE_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: AIRBYTE_VERSION
        - name: CONFIG_ROOT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: CONFIG_ROOT
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: DATABASE_PORT
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "airbyte.database.secret.name" . }}
              key: {{ include "airbyte.database.secret.passwordKey" . }}
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: DATABASE_URL
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "common.names.fullname" . }}-secrets
              key: DATABASE_USER
        - name: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION
        - name: TRACKING_STRATEGY
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: TRACKING_STRATEGY
        - name: SENTRY_DSN
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: SENTRY_DSN
        - name: PAPERCUPS_STORYTIME
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: PAPERCUPS_STORYTIME
        - name: WORKSPACE_DOCKER_MOUNT
          value: workspace
        - name: WORKSPACE_ROOT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: WORKSPACE_ROOT
        - name: WORKER_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: WORKER_ENVIRONMENT
        - name: LOCAL_ROOT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: LOCAL_ROOT
        - name: WEBAPP_URL
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: WEBAPP_URL
        - name: TEMPORAL_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: TEMPORAL_HOST
        - name: LOG_LEVEL
          value: "{{ .Values.metricsReporter.log.level }}"
        - name: JOB_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JOB_MAIN_CONTAINER_CPU_REQUEST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: JOB_MAIN_CONTAINER_CPU_REQUEST
        - name: JOB_MAIN_CONTAINER_CPU_LIMIT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: JOB_MAIN_CONTAINER_CPU_LIMIT
        - name: JOB_MAIN_CONTAINER_MEMORY_REQUEST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: JOB_MAIN_CONTAINER_MEMORY_REQUEST
        - name: JOB_MAIN_CONTAINER_MEMORY_LIMIT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: JOB_MAIN_CONTAINER_MEMORY_LIMIT
        {{- if .Values.datadog.enabled }}
        - name: DD_AGENT_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: DD_AGENT_HOST
        - name: DD_DOGSTATSD_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: DD_DOGSTATSD_PORT
        - name: PUBLISH_METRICS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: PUBLISH_METRICS
        {{- end }}
        - name: S3_LOG_BUCKET
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: S3_LOG_BUCKET
        - name: S3_LOG_BUCKET_REGION
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: S3_LOG_BUCKET_REGION
        {{- if and .Values.logs.accessKey.existingSecret .Values.logs.accessKey.existingSecretKey }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.logs.accessKey.existingSecret }}
              key: {{ .Values.logs.accessKey.existingSecretKey }}
        {{- else }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "common.names.fullname" . }}-secrets
              key: AWS_ACCESS_KEY_ID
        {{- end }}
        {{- if and .Values.logs.secretKey.existingSecret .Values.logs.secretKey.existingSecretKey }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.logs.secretKey.existingSecret }}
              key: {{ .Values.logs.secretKey.existingSecretKey }}
        {{- else }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "common.names.fullname" . }}-secrets
              key: AWS_SECRET_ACCESS_KEY
        {{- end }}
        - name: S3_MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: S3_MINIO_ENDPOINT
        - name: S3_PATH_STYLE_ACCESS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: S3_PATH_STYLE_ACCESS
        - name: GOOGLE_APPLICATION_CREDENTIALS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: GOOGLE_APPLICATION_CREDENTIALS
        - name: GCS_LOG_BUCKET
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: GCS_LOG_BUCKET
        - name: INTERNAL_API_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: INTERNAL_API_HOST
        - name: MAX_SYNC_WORKERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: MAX_SYNC_WORKERS
        - name: MAX_SPEC_WORKERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: MAX_SPEC_WORKERS
        - name: MAX_CHECK_WORKERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: MAX_CHECK_WORKERS
        - name: MAX_DISCOVER_WORKERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "common.names.fullname" . }}-env
              key: MAX_DISCOVER_WORKERS
        {{- if .Values.metricsReporter.extraEnv }}
        {{ .Values.metricsReporter.extraEnv | toYaml | nindent 8 }}
        {{- end }}
        {{- if .Values.metricsReporter.resources }}
        resources: {{- toYaml .Values.metricsReporter.resources | nindent 10 }}
        {{- end }}
        {{- if .Values.metricsReporter.containerSecurityContext }}
        securityContext: {{- toYaml .Values.metricsReporter.containerSecurityContext | nindent 10 }}
        {{- end }}
        {{- if .Values.metricsReporter.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - grep -qa airbyte.metrics.reporter.ReporterApp /proc/1/cmdline
          initialDelaySeconds: {{ .Values.metricsReporter.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.metricsReporter.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.metricsReporter.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.metricsReporter.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.metricsReporter.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.metricsReporter.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -ec
            - grep -qa airbyte.metrics.reporter.ReporterApp /proc/1/cmdline
          initialDelaySeconds: {{ .Values.metricsReporter.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.metricsReporter.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.metricsReporter.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.metricsReporter.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.metricsReporter.readinessProbe.failureThreshold }}
        {{- end }}
        volumeMounts:
        {{- if .Values.metricsReporter.extraVolumeMounts }}
  {{ toYaml .Values.metricsReporter.extraVolumeMounts | nindent 8 }}
        {{- end }}
      volumes:
      {{- if .Values.metricsReporter.extraVolumes }}
{{ toYaml .Values.metricsReporter.extraVolumes | nindent 6 }}
      {{- end }}